marker = topic.getMarker() in the PrintHelper goes off, because the topic is a Clabject.
It should be a *Topic (CentralTopic in the current case).
This requires a mechanism similar to "m = MindMap(clabject=mc)" in the ReadCommand.
We should, however, avoid creating new objects on the DSL level all the time.
Solution: keep the DLS objects somewhere accessible -> look up the right DSL objects based on the Clabject -> return the DSL object.
(The DSL objects is aware of its Clabject via the Entity super class.)

Basically two tasks:

1a. Write a parser for the COLLAB API
	Tried passing around Command objects, but it's just not working
	
1b. Define the Mindmap example's Command classes, in which the COLLAB API is called and those calls are forwarded as strings to the other Clients.

DONE: 2. Propagation of changes from the CollabTypes to the domain-specific types